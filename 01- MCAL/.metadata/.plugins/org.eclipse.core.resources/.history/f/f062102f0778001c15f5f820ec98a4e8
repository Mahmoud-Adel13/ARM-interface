/*******************************************************************************/
/*Author: Mahmoud Adel Hassan **************************************************/
/*Date: 14 Auguest 2019 ********************************************************/
/*Version: V01 *****************************************************************/
/*******************************************************************************/

/*Including part: */
#include
#include
#include


/*Code part: */
void GPIO_voidInit()                                                            /*GPIO peripheral Enable */
{


}

void GPIO_voidSetPinDir(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Mode)        /*Pin-Mode configuration function */
{
  #if Copy_u8Port == GPIO_PORTA
    #if Copy_u8Pin > 7
      GPIOA_CRL &= ~((0b1111) << (Copy_u8Pin * 4));
      GPIOA_CRL |= (Copy_u8Mode) << Copy_u8Pin;
    #else
      GPIOA_CRH &= ~((0b1111) << (Copy_u8Pin * 4));
      GPIOA_CRH |= (Copy_u8Mode) << Copy_u8Pin;
    #endif
  #elif Copy_u8Port == GPIO_PORTB
    #if Copy_u8Pin > 7
      GPIOB_CRL &= ~((0b1111) << (Copy_u8Pin * 4));
      GPIOB_CRL |= (Copy_u8Mode) << (Copy_u8Pin * 4);
    #else
      GPIOB_CRH &= ~((0b1111) << (Copy_u8Pin * 4));
      GPIOB_CRH |= (Copy_u8Mode) << (Copy_u8Pin * 4);
    #endif
  #elif Copy_u8Port == GPIO_PORTC
    #if Copy_u8Pin > 7
      GPIOC_CRL &= ~((0b1111) << (Copy_u8Pin * 4));
      GPIOC_CRL |= (Copy_u8Mode) << (Copy_u8Pin * 4);
    #else
      GPIOC_CRH &= ~((0b1111) << (Copy_u8Pin * 4));
      GPIOC_CRH |= (Copy_u8Mode) << (Copy_u8Pin * 4);
    #endif
  #endif
}

void GPIO_voidSetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin , u8 Copy_u8Value)     /*Set pin-output value function */
{
  #if Copy_u8Port == GPIO_PORTA
    #if Copy_u8Value == HIGH
      SET_BIT(GPIOA_ODR , Copy_u8Pin);
    #else
      CLR_BIT(GPIOA_ODR , Copy_u8Pin);
    #endif
  #elif Copy_u8Port == GPIO_PORTB
    #if Copy_u8Value == HIGH
      SET_BIT(GPIOB_ODR , Copy_u8Pin);
    #else
      CLR_BIT(GPIOB_ODR , Copy_u8Pin);
    #endif
  #elif Copy_u8Port == GPIO_PORTC
    #if Copy_u8Value == HIGH
      SET_BIT(GPIOC_ODR , Copy_u8Pin);
    #else
      CLR_BIT(GPIOC_ODR , Copy_u8Pin);
    #endif
  #endif
}

u8 GPIO_u8GetPinValue(u8 Copy_u8Port , u8 Copy_u8Pin)                       /*Get pin-input value function */
{
  u8 u8Value = 0;
  #if Copy_u8Port == GPIO_PORTA
    u8Value = GET_BIT(GPIOA_IDR , Copy_u8Pin);
  #elif Copy_u8Port == GPIO_PORTB
    u8Value = GET_BIT(GPIOB_IDR , Copy_u8Pin);
  #elif Copy_u8Port == GPIO_PORTC
    u8Value = GET_BIT(GPIOC_IDR , Copy_u8Pin);
  #endif
  return u8Value;
}

void GPIO_voidSetPortDir(u8 Copy_u8Port , u8 Copy_u8Mode)                       /*Port-Mode configuration function */
{

}

void GPIO_voidSetPortValue(u8 Copy_u8Port , u8 Copy_u8Value)                    /*Set Port-output value function */
{

}

void GPIO_voidGetPortValue(u8 Copy_u8Port)                                      /*Get Port-input value function */
{

}
